;;; Moving the computer player

;; Move in the chosen direction as long as the current location doesn't match our target location or a bottleneck.
(p move1
    =goal>
        state move
    =action>
        current =current
    =imaginal>
        - chosen-id =current
        chosen-direction =dir
        - target-id =current
==>
    +action>
        cmd move
        direction =dir
    =imaginal>
    =goal>
        state move
)

;; Move in the chosen direction, but our current location matches a bottleneck. Find a new bottleneck when done moving.
 (p move2
     =goal>
         state move
     =action>
         current =current
     =imaginal>
         - chosen-id =current
         chosen-direction =dir
         target-id =current
 ==>
     +action>
         cmd move
         direction =dir
     =imaginal>
     =goal>
         state move
         next find-bottleneck
 )

;; Moved to our target location without encountering bottlenecks. Check for dead end.
(p move-finish1
    =goal>
        state move
        - next find-bottleneck
    =action>
        current =current
    =imaginal>
        chosen-id =current
==>
    =goal>
        state is-dead-end
    =imaginal>
)

;; Moved to our target location while encountering a bottleneck. Find a new bottleneck.
 (p move-finish2
     =goal>
         state move
         next find-bottleneck
     =action>
         current =current
     =imaginal>
         chosen-id =current
 ==>
     =goal>
         state find-bottleneck
     =imaginal>
 )
