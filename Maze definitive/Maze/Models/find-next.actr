;;; Finding the next intersction to move to

;; Look for an intersection on our left.
(p find-next-left
    =goal>
        state find-next
    =imaginal>
        target =target
    =visual>
        - left nil
        left-attended false
==>
    +visual-location>
        kind intersection
        :attended nil
        :nearest current
        :nearest2 =target
        screen-y current
        < screen-x current
    =imaginal>
    =visual>
    =goal>
        state check-find
)

;; Look for an intersection on our right.
(p find-next-right
    =goal>
        state find-next
    =imaginal>
        target =target
    =visual>
        - right nil
        right-attended false
==>
    +visual-location>
        kind intersection
        :attended nil
        :nearest current
        :nearest2 =target
        screen-y current
        > screen-x current
    =imaginal>
    =visual>
    =goal>
        state check-find
)

;; Look for an intersection upwards.
(p find-next-up
    =goal>
        state find-next
    =imaginal>
        target =target
    =visual>
        - up nil
        up-attended false
==>
    +visual-location>
        kind intersection
        :attended nil
        :nearest current
        :nearest2 =target
        screen-x current
        < screen-y current
    =imaginal>
    =visual>
    =goal>
        state check-find
)

;; Look for an intersection downwards.
(p find-next-down
    =goal>
        state find-next
    =imaginal>
        target =target
    =visual>
        - down nil
        down-attended false
==>
    +visual-location>
        kind intersection
        :attended nil
        :nearest current
        :nearest2 =target
        screen-x current
        > screen-y current
    =imaginal>
    =visual>
    =goal>
        state check-find
)

;; There was an intersection found. Determine if there's a path there from our current location.
(p check-success
    =goal>
        state check-find
    ?visual-location>
        buffer full
==>
    =goal>
        state determine-path
)

;; There was no intersection found. Find a new intersection to move to.
(p check-fail
    =goal>
        state check-find
    ?visual-location>
        buffer failure
==>
    =goal>
        state find-next
)

